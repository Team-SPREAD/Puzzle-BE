name: cicd

on:
  push:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.9.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          push-args: --disable-content-trust

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # 대상 IP를 설정
      - name: Set target IP (MAIN)
        run: |
          STATUS=$(curl -o /dev/null -w "%{http_code}" "http://${{ secrets.NGINX_EC2_DOMAIN }}/api/env")
          echo $STATUS
          if [ $STATUS = 200 ]; then
            CURRENT_UPSTREAM=$(curl -s "http://${{ secrets.NGINX_EC2_DOMAIN }}/api/env")
          else
            CURRENT_UPSTREAM=green
          fi
          echo CURRENT_UPSTREAM=$CURRENT_UPSTREAM >> $GITHUB_ENV
          if [ $CURRENT_UPSTREAM = blue ]; then
            echo "CURRENT_PORT1=3000" >> $GITHUB_ENV     
            echo "STOPPED_PORT1=3001" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=green" >> $GITHUB_ENV
          elif [ $CURRENT_UPSTREAM = green ]; then
            echo "CURRENT_PORT1=3001" >> $GITHUB_ENV
            echo "STOPPED_PORT1=3000" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=blue" >> $GITHUB_ENV
          else
            echo "error"
            exit 1
          fi

      - name: Docker compose (MAIN) - Primary Host
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            cd server
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/puzzle:latest
            sudo docker-compose -f docker-compose-${{ env.TARGET_UPSTREAM }}.yml up -d



      - name: Docker compose (MAIN) - Secondary Host
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST2 }}
          key: ${{ secrets.EC2_SSH_KEY_2 }}
          script_stop: true
          script: |
            cd server
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/puzzle:latest
            sudo docker-compose -f docker-compose-${{ env.TARGET_UPSTREAM }}.yml up -d

      - name: Check deploy server URL (MAIN)
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://${{ secrets.HOST }}:${{ env.STOPPED_PORT1 }}/api/env
          max-attempts: 5
          retry-delay: 10s

      - name: Change nginx upstream (MAIN)
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            sudo docker exec -i nginxServer bash -c 'echo "set \$service_url ${{ env.TARGET_UPSTREAM }};" > /etc/nginx/conf.d/service-env.inc && nginx -s reload'

      - name: Stop current server (MAIN) - Primary Host
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            sudo docker stop ${{ env.CURRENT_UPSTREAM }}
            sudo docker rm ${{ env.CURRENT_UPSTREAM }}

      - name: Stop current server (MAIN) - Secondary Host
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST2 }}
          key: ${{ secrets.EC2_SSH_KEY_2 }}
          script_stop: true
          script: |
            sudo docker stop ${{ env.CURRENT_UPSTREAM }}
            sudo docker rm ${{ env.CURRENT_UPSTREAM }}
